import java.awt.Color;
import java.awt.Cursor;
import java.awt.Font;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;

public class ChatWindow extends javax.swing.JFrame  {
    
    private GroupMessage myThread;
    private ArrayList<String> groupChatSelectedList;//array ely hast5dmha mn el group message
    private ArrayList<String> groupChatNotSelectedList;
    //check if you are starting the conv or you have recieved chat request

    private String defaultString;   //"Write a reply..."
    private String id;  //name of the one I'm chatting with
    private String recievedMsg; //msg I recieve from the one I'm chatting with
    private Font id_font = new Font("Calibri Light", Font.BOLD, 14);
    private int groupFlag;
    
    public int getGroupFlag() {
        return groupFlag;
    }

    public void setGroupFlag(int groupFlag) {
        this.groupFlag = groupFlag;
    }

    public ArrayList<String> getGroupChatNotSelectedList() {
        return groupChatNotSelectedList;
    }

    public void setGroupChatNotSelectedList(ArrayList<String> groupChatNotSelectedList) {
        this.groupChatNotSelectedList = groupChatNotSelectedList;
    }

    public ArrayList<String> getGroupChatSelectedList() {
        return groupChatSelectedList;
    }

    public void setGroupChatSelectedList(ArrayList<String> groupChatSelectedList) {
        this.groupChatSelectedList = groupChatSelectedList;
    }

    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

   
    /**
     * Creates new form NewJFrame
     */
    
    
    public ChatWindow(String Chatname,GroupMessage g,int flag){
        id=Chatname;
        myThread=g;
        groupFlag=flag;
        initComponents();
        Font id_font = new Font("Calibri Light", Font.BOLD, 14);
          
          txtDisplay.setFont(id_font);
          txtDisplay.setForeground(Color.BLACK);
        
        defaultString = txtWrite.getText().trim();
    
        if(groupFlag==1 || groupFlag==2)
        {
            groupChatSelectedList = g.getSSelected();
            
            groupChatNotSelectedList = Main.OnOnlyList;
        
            /*Iterator<String> it = groupChatNotSelectedList.iterator();
            while(it.hasNext())
            {
                if(groupChatSelectedList.contains(it.next()))
                    it.remove();
            }*/
            
            grpInfoButton.setVisible(true);
            chatName.setText(id);
        }
        else if(groupFlag==0 || groupFlag==4)
        {
            grpInfoButton.setVisible(false);
            chatName.setText(id);
        }
        else // group flag = 3
        {
            grpInfoButton.setVisible(false);
          //  id = OnlineList.selected[0];
            chatName.setText(id);
          //  id = id + ": ";    
        }
        /*if(true)
        {
            Font id_font = new Font("Calibri Light", Font.BOLD, 14);
          
          txtDisplay.setFont(id_font);
          txtDisplay.setForeground(Color.BLACK);
          txtDisplay.append("\n\r" + id);
          
          txtDisplay.append(recievedMsg); 
       }*/
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        sendButton = new javax.swing.JButton();
        grpInfoButton = new javax.swing.JButton();
        chatName = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtWrite = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDisplay = new javax.swing.JTextArea();

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        sendButton.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        sendButton.setText("Send");
        sendButton.setAlignmentX(0.5F);
        sendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendButtonActionPerformed(evt);
            }
        });

        grpInfoButton.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        grpInfoButton.setText("Group Info");
        grpInfoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grpInfoButtonActionPerformed(evt);
            }
        });

        chatName.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        chatName.setText("[Default Name]");

        txtWrite.setColumns(20);
        txtWrite.setFont(new java.awt.Font("Calibri Light", 2, 14)); // NOI18N
        txtWrite.setLineWrap(true);
        txtWrite.setRows(5);
        txtWrite.setText("Write a reply...");
        txtWrite.setToolTipText("");
        txtWrite.setMargin(new java.awt.Insets(5, 4, 2, 3));
        txtWrite.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtWriteFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtWriteFocusLost(evt);
            }
        });
        txtWrite.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtWriteKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(txtWrite);

        txtDisplay.setEditable(false);
        txtDisplay.setColumns(20);
        txtDisplay.setFont(new java.awt.Font("Calibri Light", 0, 14)); // NOI18N
        txtDisplay.setRows(5);
        txtDisplay.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane2.setViewportView(txtDisplay);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(chatName, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(grpInfoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(sendButton, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chatName, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(grpInfoButton, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(sendButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

   
    private void grpInfoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grpInfoButtonActionPerformed
        // TODO add your handling code here:
        GroupInfo gi = new GroupInfo(this);
        gi.setVisible(true);
    }//GEN-LAST:event_grpInfoButtonActionPerformed

    private void sendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendButtonActionPerformed
        /*when the send button is clicked, the msg written is displayed 
        in the box and the default text is written in the lower box
        */
        displayMsg();
        txtWrite.setText("Write a reply...");
    }//GEN-LAST:event_sendButtonActionPerformed

    private void txtWriteFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtWriteFocusGained
        /*remove "write a reply" when the cursor is in the text field*/
        if (txtWrite.getText().trim().equals(defaultString))
            txtWrite.setText("");
        
        
        
    }//GEN-LAST:event_txtWriteFocusGained

    private void txtWriteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtWriteFocusLost
        /*"write a reply..." is written as default when the cursor leaves the box*/
        if(txtWrite.getText().trim().equals(""))
            txtWrite.setText("Write a reply...");
        
    }//GEN-LAST:event_txtWriteFocusLost

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
            // TODO add your handling code here:
            myThread.SendData("Bye");
    }//GEN-LAST:event_formWindowClosed

    private void txtWriteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtWriteKeyReleased
        // TODO add your handling code here:
         if (evt.getKeyCode()==java.awt.event.KeyEvent.VK_ENTER){
             displayMsg();
             txtWrite.setText("");
         }
    }//GEN-LAST:event_txtWriteKeyReleased

       
    
    void displayMsg()
    {
         if (txtWrite.getText().trim().equals(defaultString));
        else
        {            
          txtDisplay.append("Me: ");
          
          txtDisplay.append(txtWrite.getText()+"\n");
          String temp=txtWrite.getText();
          java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               myThread.SendData("msg&"+Main.username+"&"+temp);
               System.out.println("i sent "+temp);
            }
        });
          
//       Output io=new Output(txtWrite.getText(),this);
//      io.start();
//          
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel chatName;
    private javax.swing.JButton grpInfoButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton sendButton;
    private javax.swing.JTextArea txtDisplay;
    private javax.swing.JTextArea txtWrite;
    // End of variables declaration//GEN-END:variables
   synchronized public void displayText(String s)
   {
       String [] temp= s.split("&");
       txtDisplay.append(temp[1]+": "+temp[2]+"\n");
   }
   synchronized public void justDisplayOnScreen(String s)
   {
       try
       {
         /*Font id_font = new Font("Calibri Light", Font.ITALIC, 14);
         txtDisplay.setFont(id_font);
         txtDisplay.setForeground(Color.BLUE);
          
         txtDisplay.append("       " + s + "\n");
       
         id_font = new Font("Calibri Light", Font.BOLD, 14);
          txtDisplay.setFont(id_font);
          txtDisplay.setForeground(Color.BLACK);*/
           txtDisplay.append("       " + s + "\n");
         }
        catch(Exception ex){
              Logger.getLogger(ChatWindow.class.getName()).log(Level.SEVERE, null,ex);
        }
   }
}
